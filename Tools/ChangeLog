2020-04-16  Alan Coon  <alancoon@apple.com>

        Cherry-pick r260193. rdar://problem/61897737

    REGRESSION (r259762): Should always hit test for editable elements if the WKWebView is fully editable
    https://bugs.webkit.org/show_bug.cgi?id=210558
    <rdar://problem/61798347>
    
    Reviewed by Wenson Hsieh.
    
    Source/WebKit:
    
    If the entire WKWebView is marked editable (via SPI -[WKWebView _setEditable]) then
    always ask the web process to hit test the page because every element is considered
    editable.
    
    * UIProcess/ios/WKContentViewInteraction.mm:
    (-[WKContentView _requestTextInputContextsInRect:completionHandler:]):
    
    Tools:
    
    Add a test.
    
    * TestWebKitAPI/Tests/WebKitCocoa/RequestTextInputContext.mm:
    (TEST):
    
    git-svn-id: https://svn.webkit.org/repository/webkit/trunk@260193 268f45cc-cd09-0410-ab3c-d52691b4dbfc

    2020-04-16  Daniel Bates  <dabates@apple.com>

            REGRESSION (r259762): Should always hit test for editable elements if the WKWebView is fully editable
            https://bugs.webkit.org/show_bug.cgi?id=210558
            <rdar://problem/61798347>

            Reviewed by Wenson Hsieh.

            Add a test.

            * TestWebKitAPI/Tests/WebKitCocoa/RequestTextInputContext.mm:
            (TEST):

2020-04-16  Alan Coon  <alancoon@apple.com>

        Cherry-pick r260192. rdar://problem/61897737

    Move -_requestTextInputContextsInRect to WKContentView to simplify implementation
    https://bugs.webkit.org/show_bug.cgi?id=210398
    <rdar://problem/61656931>
    
    Reviewed by Darin Adler.
    
    Source/WebKit:
    
    -_requestTextInputContextsInRect is not needed on Mac, but supporting it complicates
    its implementation: it has to deal with coordinate space differences due to differences
    in what is the root view on Mac and iOS + it has to know about iOS's custom content views.
    While this function was in the "SPI" header, there is no software at Apple that was using
    these outside of WebKit, and I will assume no non-Apple software was using them either.
    Moving this function to WKContentView lets me simplify the implementation.
    
    * Platform/spi/ios/UIKitSPI.h: Add more forward declarations.
    * UIProcess/API/Cocoa/WKWebView.mm:
    (-[WKWebView _convertRectFromRootViewCoordinates:]): Deleted.
    (-[WKWebView _convertRectToRootViewCoordinates:]): Deleted.
    (-[WKWebView _mayContainEditableElementsInRect:]): Deleted; moved to WKWebViewTestingIOS.mm.
    (-[WKWebView _requestTextInputContextsInRect:completionHandler:]): Deleted; moved to WKContentViewInteraction.mm.
    * UIProcess/API/Cocoa/WKWebViewPrivate.h:
    * UIProcess/API/ios/WKWebViewPrivateForTestingIOS.h:
    * UIProcess/API/ios/WKWebViewTestingIOS.mm:
    (-[WKWebView _requestTextInputContextsInRect:completionHandler:]): Added. Turns around and
    calls the function of the same name on the WKContentView. It takes care to convert the specified
    rect from WKWebView coordinates to WKContentView coordinates and fixes up the bounding rects
    for the returned contexts to be in WKWebView coordinates. This keeps existings tests passing
    as mekes using this function intuitive since callers specify and get rects in WKWebView coordinates.
    (-[WKWebView _requestDocumentContext:completionHandler:]): Added.
    (-[WKWebView _adjustSelectionWithDelta:completionHandler:]): Added.
    (-[WKWebView _mayContainEditableElementsInRect:]): Moved from WKWebView.mm.
    * UIProcess/ios/WKContentViewInteraction.h:
    * UIProcess/ios/WKContentViewInteraction.mm:
    (-[WKContentView _requestTextInputContextsInRect:completionHandler:]): Moved from WKWebView.mm and simplified.
    
    Source/WTF:
    
    Add a convenience function to create an NSArray from a WTF::Vector with a transform function.
    The tranform function can either return a RetainPtr or an id.
    
    * wtf/cocoa/VectorCocoa.h:
    (WTF::createNSArray): Added.
    
    Tools:
    
    Update test now that -_requestTextInputContextsInRect has moved from WKWebView to WKContentView.
    I expose new testing-only WKWebView SPI to access it on the content view.
    
    * TestWebKitAPI/Tests/WebKitCocoa/DocumentEditingContext.mm:
    (-[TestWKWebView synchronouslyRequestDocumentContext:]): Added; due to category name change.
    (-[TestWKWebView synchronouslyAdjustSelectionWithDelta:]): Added; due to category name change.
    * TestWebKitAPI/Tests/WebKitCocoa/RequestTextInputContext.mm:
    (-[WKWebView synchronouslyRequestTextInputContextsInRect:]): Deleted; due to category name change.
    (-[WKWebView synchronouslyFocusTextInputContext:]): Deleted; due to category name change.
    * WebKitTestRunner/ios/UIScriptControllerIOS.mm:
    (WTR::UIScriptControllerIOS::mayContainEditableElementsInRect): Convert from content coordinates
    to WKWebView coordinates now that -_mayContainEditableElementsInRect expects it.
    
    LayoutTests:
    
    Update test and expected results now that UIScriptController.mayContainEditableElementsInRect()
    expects the passed rect to be in content coordinates.
    
    I replaced one sub-test of a rect pre-scroll with another that tests the location
    of a rect that will have editable elements after scroll. The purpose of that sub-test
    hasn't changed, but it now makes the sub-tests' rects symmetric for before and after
    scroll. I also added debug() statements to demarcate the before scroll and after scroll
    sub-tests in the results to make it easier to understand what this test file is testing.
    
    * editing/editable-region/hit-test-fixed-expected.txt:
    * editing/editable-region/hit-test-fixed.html:
    
    git-svn-id: https://svn.webkit.org/repository/webkit/trunk@260192 268f45cc-cd09-0410-ab3c-d52691b4dbfc

    2020-04-16  Daniel Bates  <dabates@apple.com>

            Move -_requestTextInputContextsInRect to WKContentView to simplify implementation
            https://bugs.webkit.org/show_bug.cgi?id=210398
            <rdar://problem/61656931>

            Reviewed by Darin Adler.

            Update test now that -_requestTextInputContextsInRect has moved from WKWebView to WKContentView.
            I expose new testing-only WKWebView SPI to access it on the content view.

            * TestWebKitAPI/Tests/WebKitCocoa/DocumentEditingContext.mm:
            (-[TestWKWebView synchronouslyRequestDocumentContext:]): Added; due to category name change.
            (-[TestWKWebView synchronouslyAdjustSelectionWithDelta:]): Added; due to category name change.
            * TestWebKitAPI/Tests/WebKitCocoa/RequestTextInputContext.mm:
            (-[WKWebView synchronouslyRequestTextInputContextsInRect:]): Deleted; due to category name change.
            (-[WKWebView synchronouslyFocusTextInputContext:]): Deleted; due to category name change.
            * WebKitTestRunner/ios/UIScriptControllerIOS.mm:
            (WTR::UIScriptControllerIOS::mayContainEditableElementsInRect): Convert from content coordinates
            to WKWebView coordinates now that -_mayContainEditableElementsInRect expects it.

2020-04-11  Wenson Hsieh  <wenson_hsieh@apple.com>

        [macOS] [WK1] Touch Bar flashes when typing in Vietnamese in Mail
        https://bugs.webkit.org/show_bug.cgi?id=210394
        <rdar://problem/60099560>

        Reviewed by Tim Horton.

        Add an API test that inserts an attributed string with the text replacement attribute, and verifies that we
        show the candidate list when inserting the string, and also don't temporarily hide the candidate list in the
        process of doing so.

        To achieve this, we swizzle out calls to -[NSCandidateListTouchBarItem updateWithInsertionPointVisibility:] to
        detect when the candidate list is either hidden or made visible.

        * TestWebKitAPI/Tests/TestWebKitAPI/mac/AppKitSPI.h:
        * TestWebKitAPI/Tests/mac/CandidateTests.mm:

        Fix a leak in an adjacent test too, while I'm touching this file.

        (TestWebKitAPI::updateCandidateListWithVisibility):

2020-04-11  Aakash Jain  <aakash_jain@apple.com>

        Buildbot: Force crash log submission after each test run (follow-up fix)
        https://bugs.webkit.org/show_bug.cgi?id=210202
        <rdar://problem/60508929>

        Unreviewed follow-up fix.

        * BuildSlaveSupport/ews-build/steps.py:
        (WaitForCrashCollection): Remove spaces from step name.

2020-04-11  Aakash Jain  <aakash_jain@apple.com>

        Buildbot: Force crash log submission after each test run (follow-up fix)
        https://bugs.webkit.org/show_bug.cgi?id=210202
        <rdar://problem/60508929>

        Unreviewed follow-up fix.

        * BuildSlaveSupport/wait-for-crash-collection: Improved error message.

2020-04-11  David Kilzer  <ddkilzer@apple.com>

        check-webkit-style should warn about 'decode' functions with missing WARN_UNUSED_RETURN attribute
        <https://webkit.org/b/210336>
        <rdar://problem/61585835>

        Reviewed by Jonathan Bedard.

        * Scripts/webkitpy/style/checkers/cpp.py:
        (_FunctionState.post_modifiers): Add.  Returns string of text
        that appears after the function definition's list of parameters.
        This is used to find the WARN_UNUSED_RETURN attribute in
        function declarations in header files.
        (_FunctionState.has_attribute): Add.  Takes a string (or regex)
        and searchs before and after the function definition for the
        attribute.
        (_FunctionState.has_return_type): Add.  Takes a string (or
        regex) and checks the return type of the fuction.
        (_FunctionState.is_static): Add.  Returns True for functions
        with the 'static' modifier.
        (check_function_definition): Add check for decode() functions
        with missing WARN_UNUSED_RETURN attribute.
        (CppChecker): Add 'security/missing_warn_unused_return' to the
        list of enabled style checkers.

        * Scripts/webkitpy/style/checkers/cpp_unittest.py:
        (CppStyleTestBase.perform_function_definition_check): Add.  This
        runs the check_function_definition() function in cpp.py.
        (CppStyleTest.test_decode_functions_missing_warn_unused_return): Add.
        Tests for the new warning.

2020-04-10  Alex Christensen  <achristensen@webkit.org>

        Add SPI to handle proxy authentication and require secure proxy connections
        https://bugs.webkit.org/show_bug.cgi?id=210343
        <rdar://problem/61546396> <rdar://problem/61546519> and <rdar://problem/61546658>

        Reviewed by Geoffrey Garen.

        * TestWebKitAPI/TCPServer.cpp:
        (TestWebKitAPI::TCPServer::startSecureConnection):
        (TestWebKitAPI::TCPServer::TCPServer):
        * TestWebKitAPI/TCPServer.h:
        * TestWebKitAPI/Tests/WebKitCocoa/Proxy.mm:
        (-[ProxyDelegate webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:]):
        (-[ProxyDelegate waitForAlert]):
        (-[ProxyDelegate webView:didReceiveAuthenticationChallenge:completionHandler:]):
        (TestWebKitAPI::TEST):

2020-04-10  Devin Rousso  <drousso@apple.com>

        Changes to shared testing JS files should not cause test failures due to console message line numbers changing
        https://bugs.webkit.org/show_bug.cgi?id=210303

        Reviewed by Simon Fraser.

        * DumpRenderTree/mac/UIDelegate.mm:
        (-[UIDelegate webView:addMessageToConsole:withSource:]):
        * DumpRenderTree/win/UIDelegate.cpp:
        (UIDelegate::webViewAddMessageToConsole):
        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.h:
        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
        (WTR::InjectedBundlePage::willAddMessageToConsole):

2020-04-10  Simon Fraser  <simon.fraser@apple.com>

        Reset view navigation gesture state between tests
        https://bugs.webkit.org/show_bug.cgi?id=210283

        Re-land r259818 with a null-check on m_webPageProxyForBackForwardListForCurrentSwipe.

        * WebKitTestRunner/cocoa/TestControllerCocoa.mm:
        (WTR::TestController::cocoaResetStateToConsistentValues):

2020-04-10  Alicia Boya García  <aboya@igalia.com>

        [WTF] DataMutex: Add runUnlocked()
        https://bugs.webkit.org/show_bug.cgi?id=209811

        Reviewed by Xabier Rodriguez-Calvar.

        Tests for runUnlocked() and DataMutex checks are introduced.

        * TestWebKitAPI/Tests/WTF/DataMutex.cpp:
        (TestWebKitAPI::TEST):

== Rolled over to ChangeLog-2020-04-10 ==
